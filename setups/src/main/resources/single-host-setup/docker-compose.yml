version: '3'
services:
  mysql:
    image: 'mysql:${docker-compose.api-mgmt.mysql.version}'
    container_name: mysql
    environment:
      - 'MYSQL_DATABASE=keycloak'
      - 'MYSQL_USER=keycloak'
      - 'MYSQL_PASSWORD=${MYSQL_PASSWORD}'
      - 'MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}'
    volumes:
      - 'mysql_data:/var/lib/mysql'
      - 'mysql_logs:/var/log/mysql'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
        mode: non-blocking
    restart: always
  keycloak:
    image: 'api-mgmt/keycloak:${docker-compose.api-mgmt.keycloak.version}'
    container_name: keycloak
    environment:
      - 'DB_PASSWORD=${MYSQL_PASSWORD}'
      - 'KEYCLOAK_USER=${KEYCLOAK_ADMIN_USERNAME}'
      - 'KEYCLOAK_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}'
      - 'KEYCLOAK_IMPORT=/opt/api-mgmt/realm.json'
      - 'JDBC_PARAMS=useSSL=false' # No need for SSL between MySQL <-> Keycloak in a docker network
      # Following variables are used to create self-signed certificates
      - 'ENDPOINT=${ENDPOINT}'
      - 'TRUSTSTORE_KEYSTORE_PASSWORD=${TRUSTSTORE_KEYSTORE_PASSWORD}'
      - 'TLS_ALLOWED_PROTOCOLS=${TLS_ALLOWED_PROTOCOLS:-}'
    ports:
      - '${KEYCLOAK_PORT}:8443'
    depends_on:
      - mysql
    volumes:
      - 'keycloak_logs:/opt/jboss/keycloak/standalone/log'
      - './../configs/tls.crt:/etc/x509/https/tls.crt'
      - './../configs/tls.key:/etc/x509/https/tls.key'
      # Following mount is used to create self-signed certificates
      - './../configs:/configs'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
        mode: non-blocking
    restart: always
  elasticsearch:
    image: 'elasticsearch:${docker-compose.api-mgmt.elasticsearch.version}'
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms${ELASTICSEARCH_JAVA_MEMORY} -Xmx${ELASTICSEARCH_JAVA_MEMORY}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 4096
        hard: 4096
    volumes:
      - 'elasticsearch_data:/usr/share/elasticsearch/data'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
        mode: non-blocking
    restart: always
  ui:
    image: 'api-mgmt/ui:${docker-compose.api-mgmt.ui.version}'
    container_name: ui
    environment:
      - >-
        CATALINA_OPTS=-Dbridge.url=${BRIDGE_URL}
        -Dapiman.es.protocol=http
        -Dapiman.es.port=9200
        -Dapiman.es.timeout=10000
        -Dapiman.es.host=elasticsearch
        -Dbridge.username=${BRIDGE_USERNAME}
        -Dbridge.password=${BRIDGE_PASSWORD}
        -Dbridge.port=${BRIDGE_PORT}
        -Dkeycloak.host=${ENDPOINT}
        -Dkeycloak.port=${KEYCLOAK_PORT}
        -Dkeycloak.truststore-password=${TRUSTSTORE_KEYSTORE_PASSWORD}
        -Dkeycloak.apiman.secret=${KEYCLOAK_APIMAN_SECRET}
        -Dkeycloak.apimanui.secret=${KEYCLOAK_APIMANUI_SECRET}
        -DkeystorePassword=${TRUSTSTORE_KEYSTORE_PASSWORD}
        -DallowSelfSigned=${SELF_SIGNED}
        -Dtomcat-sslEnabledProtocols=${TLS_ALLOWED_PROTOCOLS:-TLSv1.1,TLSv1.2}
    ports:
      - '${UI_PORT}:8443'
    depends_on:
      - elasticsearch
      - keycloak
    volumes:
      - 'ui_logs:/usr/local/tomcat/logs'
      - './../configs/apiman.jks:/usr/local/tomcat/conf/apiman.jks'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
        mode: non-blocking
    restart: always
  gateway:
    image: 'api-mgmt/gateway:${docker-compose.api-mgmt.gateway.version}'
    container_name: gateway
    environment:
      - >-
        APIMAN_GATEWAY_OPTS=-Dapiman.es.host=elasticsearch
        -Dapiman.es.protocol=http
        -Dapiman.es.port=9200
        -Dapiman.es.timeout=10000
        -Dapiman.truststore-password=${TRUSTSTORE_KEYSTORE_PASSWORD}
        -Dapiman.public-endpoint=${ENDPOINT}
        -Dkeycloak.host=${ENDPOINT}
        -Dkeycloak.port=${KEYCLOAK_PORT}
        -DallowSelfSigned=${SELF_SIGNED}
        -DallowAnyHost=${SELF_SIGNED}
        -Dkeycloak.realm-public-key=${KEYCLOAK_REALM_PUBLIC_KEY}
        -Dkeycloak.gateway.secret=${KEYCLOAK_GATEWAY_SECRET}
        -Dverticles.https.port=${GATEWAY_PORT}
        -DcachingPolicy.maxCacheSize=${MAX_CACHE_SIZE_IN_MB}
        -Dapiman.gateway-backend-keystore=${KEYSTORE_TRUSTSTORE_PATH:-}${GATEWAY_BACKEND_KEYSTORE:-/usr/src/apiman/apiman-distro-vertx/certs/apiman.jks}
        -Dapiman.gateway-backend-truststore=${KEYSTORE_TRUSTSTORE_PATH:-}${GATEWAY_BACKEND_TRUSTSTORE:-}
        -Dapiman.gateway-client-keystore=${KEYSTORE_TRUSTSTORE_PATH:-}${GATEWAY_CLIENT_KEYSTORE:-/usr/src/apiman/apiman-distro-vertx/certs/apiman.jks}
        -Dapiman.gateway-client-truststore=${KEYSTORE_TRUSTSTORE_PATH:-}${GATEWAY_CLIENT_TRUSTSTORE:-/usr/src/apiman/apiman-distro-vertx/certs/apiman.jks}
        -Dapiman.gateway-keycloak-keystore=${KEYSTORE_TRUSTSTORE_PATH:-}${GATEWAY_KEYCLOAK_KEYSTORE:-/usr/src/apiman/apiman-distro-vertx/certs/apiman.jks}
        -Dapiman.gateway-keycloak-truststore=${KEYSTORE_TRUSTSTORE_PATH:-}${GATEWAY_KEYCLOAK_TRUSTSTORE:-/usr/src/apiman/apiman-distro-vertx/certs/apiman.jks}
        -Dapiman.gateway-allowedProtocols=${TLS_ALLOWED_PROTOCOLS:-}
        -Dallowed_cors_origin=https://${ENDPOINT}:${UI_PORT}
    ports:
      - '${GATEWAY_PORT}:${GATEWAY_PORT}'
    depends_on:
      - elasticsearch
      - keycloak
    volumes:
      - 'gateway_logs:/usr/src/apiman/apiman-distro-vertx/logs'
      - './../configs:${KEYSTORE_TRUSTSTORE_PATH:-/usr/src/apiman/apiman-distro-vertx/certs}'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
        mode: non-blocking
    restart: always
  kibana:
    image: 'kibana:${docker-compose.api-mgmt.kibana.version}'
    container_name: kibana
    depends_on:
      - elasticsearch
      - kibana-proxy
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
        mode: non-blocking
    restart: always
  kibana-proxy:
    image: 'keycloak/keycloak-gatekeeper:${docker-compose.api-mgmt.keycloak-gatekeeper.version}'
    container_name: kibana-proxy
    depends_on:
      - keycloak
    entrypoint:
      - /opt/keycloak-gatekeeper
      - --listen=0.0.0.0:443
      - --upstream-url=http://kibana:5601
      - --client-id=kibana
      - --client-secret=${KEYCLOAK_KIBANA_SECRET}
      - --discovery-url=https://${ENDPOINT}:${KEYCLOAK_PORT}/auth/realms/apiman
      - --skip-openid-provider-tls-verify=${SELF_SIGNED}
      - --enable-refresh-tokens=true
      - --tls-cert=/opt/tls.crt
      - --tls-private-key=/opt/tls.key
      - --enable-encrypted-token=true
      - --enable-authorization-cookies=false
      - --enable-authorization-header=false
      - --encryption-key=${KIBANA_ENCRYPTION_KEY}
      - --resources=uri=/*|roles=kibanauser
    ports:
      - '${KIBANA_PORT}:443'
    volumes:
      - './../configs/tls.crt:/opt/tls.crt'
      - './../configs/tls.key:/opt/tls.key'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
        mode: non-blocking
    restart: always
volumes:
  mysql_data:
    driver: local
  mysql_logs:
    driver: local
  keycloak_logs:
    driver: local
  elasticsearch_data:
    driver: local
  ui_logs:
    driver: local
  gateway_logs:
    driver: local